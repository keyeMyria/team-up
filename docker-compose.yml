version: '2'

services:
  tu-django:
    build:
      context: server/
      dockerfile: /docker/Dockerfile-django
      args:
        - py_requirements=requirements/base.txt
    container_name: 'tu-django'
    labels:
      application: 'tu-django'
    env_file:
      - server/env/base.env
    expose:
      - '8001'
    depends_on:
      - tu-postgres
      - tu-redis

  tu-postgres:
    image: postgres:latest
    container_name: 'tu-postgres'
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'postgres'
      POSTGRES_DB: 'tu'
    labels:
      application: 'tu-postgres'
    expose:
      - '5432'

  tu-redis:
    image: redis:latest
    container_name: 'tu-redis'
    labels:
      application: 'tu-redis'
    expose:
      - '6379'

  tu-nginx:
    build:
      context: ./nginx/
      dockerfile: Dockerfile-nginx
    container_name: 'tu-nginx'
    labels:
      application: 'tu-nginx'
    volumes:
      - nginx-data-volume:/opt/tu/logs/nginx
    ports:
      - '80:80'
    depends_on:
      - tu-django

  tu-rabbitmq:
    image: rabbitmq:latest
    container_name: 'tu-rabbitmq'
    labels:
      application: 'tu-rabbitmq'
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=pass
    expose:
      - '5672'
      - '15672'

  tu-celery:
    build:
      context: ./server/
      dockerfile: docker/Dockerfile-celery
    container_name: 'tu-celery'
    labels:
      application: 'tu-celery'
    env_file:
      - server/env/base.env
    command: bash docker/celery-entrypoint.sh
    depends_on:
      - tu-rabbitmq

volumes:
  db-data-volume:
  nginx-data-volume:
